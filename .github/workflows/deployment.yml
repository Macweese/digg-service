---
name: Publish Docker images
on:
  push:
    tags:
      - v*
    branches:
      - master
  workflow_dispatch:
    inputs:
      release_tag:
        description: Optional release tag (e.g., v1.2.3)
        required: false
        type: string
jobs:
  test-frontend:
    name: Frontend • Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build to run tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: false
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
  test-backend:
    name: Backend • Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build to run tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
  build-images:
    name: Build images
    runs-on: ubuntu-latest
    needs:
      - test-frontend
      - test-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build Frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: false
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build Fullstack
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.fullstack
          push: false
          platforms: linux/amd64
          build-args: |
            VITE_API_URL=/api
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    name: Deployment • Push images to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - build-images
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref,
      'refs/tags/v')
    env:
      DOCKERHUB_USER: edusihb309
      IMAGE_REPO: digg-service
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta • Backend
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_REPO }}
          tags: >
            # Tag from git tag push, e.g., backend-v1.0.7

            type=ref,event=tag,prefix=backend-

            # Tag from manual run input, e.g., backend-v1.0.7

            type=raw,value=${{ inputs.release_tag }},prefix=backend-,enable=${{ github.event_name == 'workflow_dispatch' && inputs.release_tag != '' }}

            # Always add a sha tag

            type=sha,prefix=backend-sha-,format=long
      - name: Docker meta • Frontend
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_REPO }}
          tags: >
            type=ref,event=tag,prefix=frontend-

            type=raw,value=${{ inputs.release_tag }},prefix=frontend-,enable=${{ github.event_name == 'workflow_dispatch' && inputs.release_tag != '' }}

            type=sha,prefix=frontend-sha-,format=long
      - name: Docker meta • Fullstack
        id: meta_fullstack
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_REPO }}
          tags: >
            # Fullstack gets both prefixed and plain release tags

            type=ref,event=tag,prefix=fullstack-

            type=ref,event=tag

            type=raw,value=${{ inputs.release_tag }},prefix=fullstack-,enable=${{ github.event_name == 'workflow_dispatch' && inputs.release_tag != '' }}

            type=raw,value=${{ inputs.release_tag }},enable=${{ github.event_name == 'workflow_dispatch' && inputs.release_tag != '' }}

            type=sha,prefix=fullstack-sha-,format=long
      - name: Push Backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push Fullstack
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.fullstack
          push: true
          platforms: linux/amd64
          build-args: |
            VITE_API_URL=/api
          tags: ${{ steps.meta_fullstack.outputs.tags }}
          labels: ${{ steps.meta_fullstack.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
