name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Minimal perms; allow pushing container img
permissions:
  contents: read
  packages: write

# Cancel in-progress runs for same ref if new one starts
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend • Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Maven Test + Package
        run: mvn -B -ntp clean verify

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: |
            target/surefire-reports/**
            target/failsafe-reports/**
          if-no-files-found: ignore

      - name: Upload backend artifact (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: |
            target/*.jar
          if-no-files-found: warn

  frontend:
    name: Frontend • Test & Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps (ci if lockfile, else install)
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run unit tests with coverage
        run: npm run test:ci

      - name: Upload frontend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: |
            frontend/coverage/**
          if-no-files-found: ignore

      - name: Build frontend
        run: npm run build

      - name: Upload frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          if-no-files-found: error

  docker:
    name: Docker • Build (and Push on main)
    runs-on: ubuntu-latest
    needs: [ backend, frontend ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login only for push events (PRs build but don't push)
      - name: Log in to GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Backend img
      - name: Build (and Push) Backend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}-backend:sha-${{ github.sha }}
            ghcr.io/${{ github.repository }}-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Frontend img
      - name: Build (and Push) Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}-frontend:sha-${{ github.sha }}
            ghcr.io/${{ github.repository }}-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max