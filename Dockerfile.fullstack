# ---- Backend build ----
FROM maven:3.9-eclipse-temurin-17 AS backend-build
WORKDIR /workspace
COPY pom.xml .
COPY checkstyle.xml .
COPY src ./src
# Use the Maven cache to speed up subsequent builds
RUN --mount=type=cache,target=/root/.m2 mvn -B -ntp -DskipTests clean package

# ---- Frontend build ----
FROM node:20-alpine AS frontend-build
WORKDIR /app
COPY frontend/package*.json ./
RUN npm ci
COPY frontend/ .
# Optional: make API base URL configurable at build-time
ARG VITE_API_URL=/api
ENV VITE_API_URL=${VITE_API_URL}
RUN npm run build

# ---- Runtime (single process: Spring Boot) ----
FROM eclipse-temurin:17-jre-alpine
WORKDIR /app

# Copy the packaged backend JAR (ignore the "original-" jar)
COPY --from=backend-build /workspace/target /tmp/target
RUN set -eux; \
    JAR="$(ls -1 /tmp/target/*.jar | grep -v 'original-' | head -n1)"; \
    cp "$JAR" /app/app.jar; \
    rm -rf /tmp/target

# Copy the built frontend and tell Spring to serve it
COPY --from=frontend-build /app/dist/ /app/static/
# Spring Boot 2.x and 3.x property names (harmless to set both)
ENV SPRING_WEB_RESOURCES_STATIC_LOCATIONS=file:/app/static/
ENV SPRING_RESOURCES_STATIC_LOCATIONS=file:/app/static/

EXPOSE 8080
ENTRYPOINT ["java","-jar","/app/app.jar"]